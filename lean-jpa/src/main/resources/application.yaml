#spring:
#  server:
#    port: 8080
#  application:
#    name: SPRING-JPA-APP
#  boot:
#    admin:
#      client:
#        url: http://localhost:7001/springboot-admin-server/
#        username: admin
#        password: admin
#  devtools:
#    restart:
#      enabled: true # 启用自动重启功能
#      exclude:
#        - "**/static/**"
#        - "**/public/**"
#        - "**/resources/**"
#        - "**/META-INF/**"
#        - "**/test/**"
#    liveReload:
#      enabled: true # 启用自动刷新功能
#
## 配置管理端点
#management:
#  endpoints:
#    web:
#      exposure:
#        include: '*' # 暴露所有端点
#  endpoint:
#    health:
#      show-details: always # 显示详细信息
#logging:
#  file: admin.log # 日志文件名





spring:
  datasource:
    url: jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true&useSSL=false&allowPublicKeyRetrieval=true
    username: root
    password: root
    jpa:
      database: mysql
      database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
      show-sql: true
      hibernate:
        ddl-auto: upadte # 一般使用update
          # create: 每次运行程序时，都会重新创建表，故而数据会丢失
          # create-drop: 每次运行程序时会先创建表结构，然后待程序结束时清空表
          # upadte: 每次运行程序，没有表时会创建表，如果对象发生改变会更新表结构，原有数据不会清空，只会更新（推荐使用）
          # validate: 运行程序会校验数据与数据库的字段类型是否相同，字段不同会报错
        # none: 禁用DDL处理
  boot:
    admin:
      client:
        url: http://localhost:7001/springboot-admin-server
        username: admin  # 服务器端配置的用户名
        password: admin  # 服务器端配置的密码
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always